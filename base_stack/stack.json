{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CoreOS Stack with separate ASGs for zookeeper, mesos-master and mesos-slave",
  "Mappings" : {
    "RegionMap" : {
      "ap-southeast-2" : {
        "AMI" : "ami-b9b5c583"
      },
      "ap-southeast-1" : {
        "AMI" : "ami-f80b3aaa"
      },
      "us-east-1" : {
        "AMI" : "ami-323b195a"
      }
    }
  },
  "Parameters": {
    "MgtNetwork": {
      "Description": "The net block (CIDR) that SSH and Mesos/Marathon management is available to.",
      "Default": "0.0.0.0/0",
      "Type": "String"
    },
    "InstanceType" : {
      "Description" : "EC2 HVM instance type (m3.medium, etc).",
      "Type" : "String",
      "Default" : "m3.medium",
      "AllowedValues" : [ "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c3.large","c3.xlarge", "c3.2xlarge", "c3.4xlarge","c3.8xlarge", "cc2.8xlarge","cr1.8xlarge","hi1.4xlarge", "hs1.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "t2.micro", "t2.small", "t2.medium" ],
      "ConstraintDescription" : "Must be a valid EC2 HVM instance type."
    },
    "SpotPrice": {
      "Description": "Spot price for the AutoScaling Group",
      "Type": "Number",
      "MinValue" : "0",
      "Default": "0"
    },
    "ClusterSize": {
      "Default": "3",
      "MinValue": "3",
      "MaxValue": "12",
      "Description": "Number of nodes in cluster (3-12).",
      "Type": "Number"
    },
    "DiscoveryURL": {
      "Description": "An unique etcd cluster discovery URL. Grab a new token from https://discovery.etcd.io/new",
      "Type": "String"
    },
    "AdvertisedIPAddress": {
      "Description": "Use 'private' if your etcd cluster is within one region or 'public' if it spans regions or cloud providers.",
      "Default": "private",
      "AllowedValues": ["private", "public"],
      "Type": "String"
    },
    "KeyPair" : {
      "Description" : "The name of an EC2 Key Pair to allow SSH access to the instance.",
      "Type" : "String"
    }
  },
  "Resources": {
    "MesosSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SecurityGroup for the Mesos Master instances",
        "VpcId": {"Ref": "ClusterVPC"},
        "Tags": [ { "Key": "Name", "Value": "Mesos Security Group" } ]
      }
    },
    "MesosSecurityGroupSSH": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {"Ref": "MesosSecurityGroup"},
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": {"Ref": "MgtNetwork"}
      }
    },
    "MesosSecurityGroupSSH": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {"Ref": "MesosSecurityGroup"},
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": {"Ref": "MgtNetwork"}
      }
    },
    "MesosSecurityGroup80": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {"Ref": "MesosSecurityGroup"},
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": {"Ref": "MgtNetwork"}
      }
    },
    "MesosSecurityGroup443": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {"Ref": "MesosSecurityGroup"},
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": {"Ref": "MgtNetwork"}
      }
    },
    "MesosSecurityGroup2181": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {"Ref": "MesosSecurityGroup"},
        "IpProtocol": "tcp",
        "FromPort": "2181",
        "ToPort": "2181",
        "SourceSecurityGroupId": {"Ref": "MesosSecurityGroup"}
      }
    },
    "MesosSecurityGroup2888": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {"Ref": "MesosSecurityGroup"},
        "IpProtocol": "tcp",
        "FromPort": "2888",
        "ToPort": "2888",
        "SourceSecurityGroupId": {"Ref": "MesosSecurityGroup"}
      }
    },
    "MesosSecurityGroup3888": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {"Ref": "MesosSecurityGroup"},
        "IpProtocol": "tcp",
        "FromPort": "3888",
        "ToPort": "3888",
        "SourceSecurityGroupId": {"Ref": "MesosSecurityGroup"}
      }
    },
    "MesosSecurityGroupMesosMgt": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {"Ref": "MesosSecurityGroup"},
        "IpProtocol": "tcp",
        "FromPort": "5050",
        "ToPort": "5050",
        "CidrIp": {"Ref": "MgtNetwork"}
      }
    },
    "MesosSecurityGroupMarathonMgt": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {"Ref": "MesosSecurityGroup"},
        "IpProtocol": "tcp",
        "FromPort": "8080",
        "ToPort": "8080",
        "CidrIp": {"Ref": "MgtNetwork"}
      }
    },
    "MesosSecurityGroupChronosMgt": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {"Ref": "MesosSecurityGroup"},
        "IpProtocol": "tcp",
        "FromPort": "31001",
        "ToPort": "31001",
        "CidrIp": {"Ref": "MgtNetwork"}
      }
    },
    "ClusterVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.17.42.0/23",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Cluster VPC"
          }
        ]
      }
    },
    "ClusterInternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },
    "ClusterVPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": { "Ref" : "ClusterInternetGateway" },
        "VpcId": { "Ref" : "ClusterVPC" }
      }
    },
    "AccessIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      },
      "DependsOn": "ClusterVPC"
    },
    "ClusterSubnetA": {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : "ap-southeast-2a",
        "CidrBlock" : "172.17.42.0/24",
        "VpcId" : { "Ref" : "ClusterVPC" }
      }
    },
    "ClusterSubnetB": {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "AvailabilityZone" : "ap-southeast-2b",
        "CidrBlock" : "172.17.43.0/24",
        "VpcId" : { "Ref" : "ClusterVPC" }
      }
    },
    "MesosAutoScale": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {"Fn::GetAZs": ""},
        "LaunchConfigurationName": {"Ref": "MesosLaunchConfig"},
        "MinSize": "3",
        "MaxSize": "12",
        "DesiredCapacity": {"Ref": "ClusterSize"},
        "Tags": [
          {"Key": "Name", "Value": { "Ref" : "AWS::StackName" }, "PropagateAtLaunch": true}
        ]
      }
    },
    "MesosLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "InstanceType": {"Ref": "InstanceType"},
        "KeyName": {"Ref": "KeyPair"},
        "SpotPrice": {"Ref": "SpotPrice"},
        "UserData" : { "Fn::Base64":
          { "Fn::Join": [ "", [
            "#cloud-config\n\n",
            "coreos:\n",
            "  etcd:\n",
            "    discovery: ", { "Ref": "DiscoveryURL" }, "\n",
            "    addr: $", { "Ref": "AdvertisedIPAddress" }, "_ipv4:4001\n",
            "    peer-addr: $", { "Ref": "AdvertisedIPAddress" }, "_ipv4:7001\n",
            "  fleet:\n",
            "    public-ip: $private_ipv4\n",
            "    metadata: public_ip=$public_ipv4\n",
            "  units:\n",
            "    - name: etcd.service\n",
            "      command: start\n",
            "    - name: fleet.service\n",
            "      command: start\n"
            ] ]
          }
        }
      }
    }
  },
  "Outputs" : {
    "AccessIP" : {
      "Value" : { "Ref" : "AccessIP" }
    }
  }
}
